{"ast":null,"code":"var _jsxFileName = \"/Users/vamsikrishna/Code/xghostnet/xghostnet/frontend/src/components/DeviceMonitor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Paper, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, IconButton, Chip } from '@mui/material';\nimport { Refresh, Settings } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceMonitor = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const fetchDevices = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/devices');\n      const data = await response.json();\n      setDevices(data.devices);\n    } catch (error) {\n      console.error('Error fetching devices:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchDevices();\n    const interval = setInterval(fetchDevices, 5000); // Refresh every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n  const getStatusColor = status => {\n    switch (status) {\n      case 'active':\n        return 'success';\n      case 'inactive':\n        return 'warning';\n      case 'error':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Device Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: fetchDevices,\n        disabled: loading,\n        children: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Device ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Sample Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Center Frequency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Gain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Last Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: devices.map(device => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Chip, {\n                label: device.status,\n                color: getStatusColor(device.status),\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [device.sample_rate.toLocaleString(), \" Hz\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [device.center_freq.toLocaleString(), \" Hz\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [device.gain, \" dB\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: new Date(device.last_update).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                children: /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, device.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(DeviceMonitor, \"VictZsmNJ54321hwi2IyKub/Tx4=\");\n_c = DeviceMonitor;\nexport default DeviceMonitor;\nvar _c;\n$RefreshReg$(_c, \"DeviceMonitor\");","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","IconButton","Chip","Refresh","Settings","jsxDEV","_jsxDEV","DeviceMonitor","_s","devices","setDevices","loading","setLoading","fetchDevices","response","fetch","data","json","error","console","interval","setInterval","clearInterval","getStatusColor","status","children","sx","display","justifyContent","alignItems","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","component","map","device","id","type","label","color","size","sample_rate","toLocaleString","center_freq","gain","Date","last_update","_c","$RefreshReg$"],"sources":["/Users/vamsikrishna/Code/xghostnet/xghostnet/frontend/src/components/DeviceMonitor.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Paper, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, IconButton, Chip } from '@mui/material';\nimport { Refresh, Settings } from '@mui/icons-material';\n\ninterface Device {\n  id: string;\n  type: string;\n  status: 'active' | 'inactive' | 'error';\n  sample_rate: number;\n  center_freq: number;\n  gain: number;\n  last_update: string;\n}\n\nconst DeviceMonitor: React.FC = () => {\n  const [devices, setDevices] = useState<Device[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchDevices = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/devices');\n      const data = await response.json();\n      setDevices(data.devices);\n    } catch (error) {\n      console.error('Error fetching devices:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchDevices();\n    const interval = setInterval(fetchDevices, 5000); // Refresh every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active':\n        return 'success';\n      case 'inactive':\n        return 'warning';\n      case 'error':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h6\">Device Status</Typography>\n        <IconButton onClick={fetchDevices} disabled={loading}>\n          <Refresh />\n        </IconButton>\n      </Box>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Device ID</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Sample Rate</TableCell>\n              <TableCell>Center Frequency</TableCell>\n              <TableCell>Gain</TableCell>\n              <TableCell>Last Update</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {devices.map((device) => (\n              <TableRow key={device.id}>\n                <TableCell>{device.id}</TableCell>\n                <TableCell>{device.type}</TableCell>\n                <TableCell>\n                  <Chip \n                    label={device.status} \n                    color={getStatusColor(device.status) as any}\n                    size=\"small\"\n                  />\n                </TableCell>\n                <TableCell>{device.sample_rate.toLocaleString()} Hz</TableCell>\n                <TableCell>{device.center_freq.toLocaleString()} Hz</TableCell>\n                <TableCell>{device.gain} dB</TableCell>\n                <TableCell>{new Date(device.last_update).toLocaleString()}</TableCell>\n                <TableCell>\n                  <IconButton size=\"small\">\n                    <Settings />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default DeviceMonitor; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,KAAK,EAAEC,UAAU,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,cAAc,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,IAAI,QAAQ,eAAe;AAC1I,SAASC,OAAO,EAAEC,QAAQ,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYxD,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMuB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;MAC7D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,UAAU,CAACM,IAAI,CAACP,OAAO,CAAC;IAC1B,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,SAAS;MACRN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACdsB,YAAY,CAAC,CAAC;IACd,MAAMO,QAAQ,GAAGC,WAAW,CAACR,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;IAClD,OAAO,MAAMS,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,cAAc,GAAIC,MAAc,IAAK;IACzC,QAAQA,MAAM;MACZ,KAAK,QAAQ;QACX,OAAO,SAAS;MAClB,KAAK,UAAU;QACb,OAAO,SAAS;MAClB,KAAK,OAAO;QACV,OAAO,OAAO;MAChB;QACE,OAAO,SAAS;IACpB;EACF,CAAC;EAED,oBACElB,OAAA,CAACd,GAAG;IAAAiC,QAAA,gBACFnB,OAAA,CAACd,GAAG;MAACkC,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,UAAU,EAAE,QAAQ;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAL,QAAA,gBACzFnB,OAAA,CAACZ,UAAU;QAACqC,OAAO,EAAC,IAAI;QAAAN,QAAA,EAAC;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACnD7B,OAAA,CAACL,UAAU;QAACmC,OAAO,EAAEvB,YAAa;QAACwB,QAAQ,EAAE1B,OAAQ;QAAAc,QAAA,eACnDnB,OAAA,CAACH,OAAO;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAEN7B,OAAA,CAACR,cAAc;MAACwC,SAAS,EAAE7C,KAAM;MAAAgC,QAAA,eAC/BnB,OAAA,CAACX,KAAK;QAAA8B,QAAA,gBACJnB,OAAA,CAACP,SAAS;UAAA0B,QAAA,eACRnB,OAAA,CAACN,QAAQ;YAAAyB,QAAA,gBACPnB,OAAA,CAACT,SAAS;cAAA4B,QAAA,EAAC;YAAS;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAChC7B,OAAA,CAACT,SAAS;cAAA4B,QAAA,EAAC;YAAI;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC3B7B,OAAA,CAACT,SAAS;cAAA4B,QAAA,EAAC;YAAM;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC7B7B,OAAA,CAACT,SAAS;cAAA4B,QAAA,EAAC;YAAW;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAClC7B,OAAA,CAACT,SAAS;cAAA4B,QAAA,EAAC;YAAgB;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACvC7B,OAAA,CAACT,SAAS;cAAA4B,QAAA,EAAC;YAAI;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC3B7B,OAAA,CAACT,SAAS;cAAA4B,QAAA,EAAC;YAAW;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAClC7B,OAAA,CAACT,SAAS;cAAA4B,QAAA,EAAC;YAAO;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACZ7B,OAAA,CAACV,SAAS;UAAA6B,QAAA,EACPhB,OAAO,CAAC8B,GAAG,CAAEC,MAAM,iBAClBlC,OAAA,CAACN,QAAQ;YAAAyB,QAAA,gBACPnB,OAAA,CAACT,SAAS;cAAA4B,QAAA,EAAEe,MAAM,CAACC;YAAE;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAClC7B,OAAA,CAACT,SAAS;cAAA4B,QAAA,EAAEe,MAAM,CAACE;YAAI;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACpC7B,OAAA,CAACT,SAAS;cAAA4B,QAAA,eACRnB,OAAA,CAACJ,IAAI;gBACHyC,KAAK,EAAEH,MAAM,CAAChB,MAAO;gBACrBoB,KAAK,EAAErB,cAAc,CAACiB,MAAM,CAAChB,MAAM,CAAS;gBAC5CqB,IAAI,EAAC;cAAO;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACb;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC,eACZ7B,OAAA,CAACT,SAAS;cAAA4B,QAAA,GAAEe,MAAM,CAACM,WAAW,CAACC,cAAc,CAAC,CAAC,EAAC,KAAG;YAAA;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC/D7B,OAAA,CAACT,SAAS;cAAA4B,QAAA,GAAEe,MAAM,CAACQ,WAAW,CAACD,cAAc,CAAC,CAAC,EAAC,KAAG;YAAA;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC/D7B,OAAA,CAACT,SAAS;cAAA4B,QAAA,GAAEe,MAAM,CAACS,IAAI,EAAC,KAAG;YAAA;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACvC7B,OAAA,CAACT,SAAS;cAAA4B,QAAA,EAAE,IAAIyB,IAAI,CAACV,MAAM,CAACW,WAAW,CAAC,CAACJ,cAAc,CAAC;YAAC;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACtE7B,OAAA,CAACT,SAAS;cAAA4B,QAAA,eACRnB,OAAA,CAACL,UAAU;gBAAC4C,IAAI,EAAC,OAAO;gBAAApB,QAAA,eACtBnB,OAAA,CAACF,QAAQ;kBAAA4B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA,GAlBCK,MAAM,CAACC,EAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmBd,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAvFID,aAAuB;AAAA6C,EAAA,GAAvB7C,aAAuB;AAyF7B,eAAeA,aAAa;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}